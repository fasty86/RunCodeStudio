version: '3.9'

services:
  client:
    container_name: prakticum-client
    image: ghcr.io/fasty86/runcodestudio/client:f40a4a2b7145d6ea03172b2c3c508c4e92c48674
    build:
      context: .
      dockerfile: Dockerfile.client-prod
      target: production
      args:
        - CLIENT_PORT=3000
    restart: always
    ports:
      - '3001:3001'
    environment:
      - CLIENT_SERVER_PORT=3001
    networks:
      - game

  server:
    container_name: prakticum-server
    image: ghcr.io/fasty86/runcodestudio/server:f40a4a2b7145d6ea03172b2c3c508c4e92c48674
    build:
      context: .
      dockerfile: Dockerfile.server-prod
      target: production
      args:
        - SERVER_PORT=3005
    restart: always
    ports:
      - '3005:3005'
    environment:
      - SERVER_PORT=3005
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
    depends_on:
      - postgres
    networks:
      - game
    command:
      [
        './scripts/wait-for-it.sh',
        'postgres:5432',
        '--',
        'node',
        '/app/index.js',
      ]

  postgres:
    image: postgres:latest
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./tmp/postgresql/data:/var/lib/postgresql/data
    networks:
      - game

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=secret
      - PGADMIN_LISTEN_PORT=80
    ports:
      - '8080:80'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - game

volumes:
  pgadmin-data:
    driver: local

networks:
  game:
    driver: bridge
