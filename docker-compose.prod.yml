version: '3.9'

services:
  client:
    container_name: prakticum-client
    image: prakticum-client
    build:
      context: .
      dockerfile: Dockerfile.client
      target: production
      args:
        CLIENT_PORT: ${CLIENT_SERVER_PORT}
    restart: always
    ports:
      - '${CLIENT_SERVER_PORT}:${CLIENT_SERVER_PORT}'
    environment:
      - CLIENT_SERVER_PORT=${CLIENT_SERVER_PORT}
    networks:
      - game
  server:
    container_name: prakticum-server
    image: prackicum-server
    build:
      context: .
      dockerfile: Dockerfile.server
      target: production
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    depends_on:
      - postgres
    networks:
      - game
    command:
      [
        './scripts/wait-for-it.sh',
        'postgres:${POSTGRES_PORT}',
        '--',
        'node',
        '/app/index.js',
      ]

  postgres:
    image: postgres:latest
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./tmp/postgresql/data:/var/lib/postgresql/data
    networks:
      - game
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
    ports:
      - '8080:80'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - game

volumes:
  pgadmin-data:
    driver: local

networks:
  game:
    driver: bridge
